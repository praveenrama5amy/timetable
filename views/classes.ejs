<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Classes</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <style>
        *{
            box-sizing: border-box;
            margin: 0;
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            transition:  1s ease-out;
            
        }
        html{
            height: -webkit-fill-available;
        }
        body{
            height: 100%;
            width: 100%;
            margin: 0;
        }
        .collections{
            margin: 10px 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }
        .collection{
            margin: 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            padding: 10px;
            box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
            width: 80%;
            opacity: 0.9;
            transition: all;
            transition-duration: 100ms;
        }
        form{
            width: 70%;
        }
        input[type = "text"]{
            padding: 10px;
            width: 100%;
        }
        button{
            padding: 10px;
            width: 100%;
        }
        .classes{
            margin: 10px 5px;
            /* display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column; */
        }
        .class{
            border: solid black 2px;
            margin: 10px;
            padding: 10px;
            display: flex;
            /* align-items: center; */
            /* justify-content: center; */
            flex-direction: column;
            font-weight: bolder;
        }
        .class .dropdown-btn{
            align-items: center;
            display: flex;
            cursor: pointer;
        }
        .class .dropdown-btn :first-child{
            flex: 1;
        }
        .dropdown-content{
            display: none;
        }
        .tutorsSelect{
            display: flex;
            align-items: center;
        }
        .pointer{
            cursor: pointer;
        }
        label{
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }
        input[type = "checkbox"]{
            width: 20px;
            height: 20px;
        }
    </style>
</head>
<body>
    <h1 style="text-align: center;text-transform: uppercase;letter-spacing: 10px;font-weight: bold;">
        Classes
    </h1>
    <div class="collections">
        <div class="collection addForm" style="font-weight: bold;">
            <form action="/organisation/<%= organisation.name %>/addClass" method="post" onsubmit="return false" id="classAddForm">
                <input type="text" placeholder="Class Name" name="name" id="className">
                <button onclick="addClass()">Add Class</button>
            </form>
        </div>
    </div>
    <div class="classes">
        <% classes.forEach(e => { %>
            <div class="class">
                <div class="dropdown-btn" onclick="dropdown(this)">
                    <p><%= e.name %></p>
                    <span class="material-symbols-outlined">arrow_drop_down</span>
                </div>
                <div class="dropdown-content">
                    <h2>Subjects:</h2>
                    <% e.subjects.forEach(subject => { %>
                        <div style="display: flex;align-items: center;">
                            <label for="<%= subject.name %>@<%= e.name %>" style="flex: 1;"><%= subject.name %></label>
                            <div class="dropdown" style="border: solid black 1px;padding: 10px;border-radius: 4px;">
                                <div class="dropdown-btn  tutorsSelect" onclick="dropdown(this)" style="width: 60vw;">
                                    <% if (subject.tutors.length != 0) { %>
                                        <p><%= subject.tutors.join(",") %></p>
                                    <% } else { %>
                                        <p>Select Tutor teaches this Subject</p>
                                    <% } %>
                                    <span class="material-symbols-outlined">arrow_drop_down</span></div>
                                <div class="dropdown-content">
                                    <% tutors.forEach(tutor => { %>
                                        <div style="display: flex;align-items: center;">
                                            <input type="checkbox" name="<%= tutor.name %>@<%= subject.name %>@<%= e.name %>" id="<%= tutor.name %>@<%= subject.name %>@<%= e.name %>" class="pointer" onchange="editSubjectTutorOfClass(this)"
                                        <% if (subject.tutors.includes(tutor.name)) { %>
                                            checked
                                        <% } %>
                                        >
                                        <label for="<%= tutor.name %>@<%= subject.name %>@<%= e.name %>" class="pointer"><%= tutor.name %></label>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>
        <% }) %>
    </div>
    <script>
        function dropdown(e){
            let parent = e.parentElement;
            let dropdownContent = parent.getElementsByClassName("dropdown-content")[0]
            if(dropdownContent.style.display == "none" || dropdownContent.style.display == ""){
                dropdownContent.style.display = "block"
            }else{
                dropdownContent.style.display = "none"
            }
        }
        function addClass(){
            let className = document.getElementById("className").value;
            if(className == null || className == ""){
                // alert("Class Name can't be Empty")
                return;
            }
            document.getElementById("className").value = "";
            let location = document.getElementById("classAddForm").getAttribute("action")
            let xhttp = new XMLHttpRequest();
            xhttp.open("POST",location);
            xhttp.setRequestHeader("Content-Type", "application/json")
            xhttp.send(JSON.stringify({name : className}))
            xhttp.onload = function(){
                let res = this.responseText;
                if(res=="OK"){
                    addClassToDom(className);
                }else{
                    alert("Class Already Exist")
                }
            }
        }
        function addClassToDom(className){
            let elements = document.querySelectorAll(".class")
            let parent = document.querySelector(".classes");
            let e = document.createElement("div")
            e.className = "class"
            e.style = "font-weight:bold;"
            e.innerHTML = className;
            e.id = className;
            e.setAttribute("onclick","openClass(this)")
            parent.appendChild(e)
        }
        function setClassToDom(classNames){
            let elements = document.querySelectorAll(".class")
            elements.forEach(e=>{
                e.remove();
            })
            let parent = document.querySelector(".classes");
            classNames.forEach(element=>{
                let e = document.createElement("div")
                e.className = "class"
                e.style = "font-weight:bold;"
                e.innerHTML = element;
                e.id = className;
                e.setAttribute("onclick","openClass(this)")
                parent.appendChild(e)
            })
        }
        function removeClassFromDom(className){
            let element = document.querySelectorAll(".class")
            element = [...element].find(e=>{
                return e.innerText == className
            })
            if(element){
                element.remove()
            }
            else{
                return({
                    code:404,
                    error : "Class Not Found"
                })
            }
            // let parent = document.querySelector(".collections");
        }
        function openClass(className){
            location.assign(`/timetable/`)
        }
        function ajax(url,method,data){
            return new Promise((resolve)=>{
                let xhttp = new XMLHttpRequest();
                xhttp.onload = function(){
                    resolve(this.responseText)
                }
                xhttp.open(method,url);
                xhttp.send(data);
            })
        }
        async function editSubjectTutorOfClass(element){
            let [tutorName, subjectName, className] = (element.name).split("@");
            let value = element.checked
            let data = {
                tutorName,
                subjectName,
                className,
                value
            }
            let res = await ajax("editSubjectTutorOfClass","POST",JSON.stringify(data));
            res = JSON.parse(res)
            if(res.error != null){
                alert(res.error)
                location.reload();
                return;
            }
            let paraElement = element.parentElement.parentElement.parentElement.querySelector(".tutorsSelect p");
            if(paraElement.innerText == "Select Tutor teaches this Subject" && value == true){
                paraElement.innerText = tutorName
            }else if(paraElement.innerText != "Select Tutor teaches this Subject" && value == true){
                paraElement.innerText += ", "+ tutorName;
            }
            if(paraElement.innerText != "Select Tutor teaches this Subject" && value == false){
                let tutors = paraElement.innerText.split(",");
                tutors = tutors.filter(tutor => {
                    tutor = tutor.trim();
                    tutorName = tutorName.trim();
                    if(tutor != tutorName){
                        return true;
                    }
                });
                if(tutors.length == 0){
                    paraElement.innerText = "Select Tutor teaches this Subject"    
                    return;
                }
                tutors = tutors.join(", ");
                paraElement.innerText = tutors
            }
        }
    </script>
</body>
</html>